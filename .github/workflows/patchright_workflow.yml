name: PatchRight-Python Workflow

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Playwright Version'
        default: ''

permissions:
  contents: write
  id-token: write

env:
  REPO: ${{ github.repository }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  patchright-workflow:
    name: "Patchright-Python Workflow: Install, Patch, Build and Upload Artifact"
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Check Release Version
        id: version_check
        run: |
          if [ -n "${{ github.event.inputs.version }}" ]; then
            echo "proceed=true" >>$GITHUB_OUTPUT
            echo "playwright_version=${{ github.event.inputs.version }}" >> $GITHUB_ENV
          else
            chmod +x utils/release_version_check.sh
            utils/release_version_check.sh
          fi

      - name: Install Playwright-Python Package
        if: steps.version_check.outputs.proceed == 'true'
        run: |
          git clone https://github.com/microsoft/playwright-python  --branch ${{ env.playwright_version }}
          cd playwright-python
          python -m pip install --upgrade pip
          pip install -r local-requirements.txt
          pip install -e .
          pip install black toml build

      - name: Patch Playwright-Python Package
        if: steps.version_check.outputs.proceed == 'true'
        run: |
          python patch_python_package.py
          python -m black playwright-python

      - name: Build Patchright-Python Package
        if: steps.version_check.outputs.proceed == 'true'
        run: |
          cd playwright-python
          python -m build

      - name: Zip Built Package
        if: steps.version_check.outputs.proceed == 'true'
        run: |
          cd playwright-python/dist
          zip -r ../../patchright-python-${{ env.playwright_version }}.zip ./

      - name: Upload Artifact
        if: steps.version_check.outputs.proceed == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: patchright-python-${{ env.playwright_version }}
          path: patchright-python-${{ env.playwright_version }}.zip
